name: Windows CI

on: [push, pull_request]

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: windows-2019-cl-x86
            os: windows-2019
            generator: Visual Studio 16 2019
            configuration: Debug
            cmake-args: -A Win32

          - name: windows-2019-cl-x64
            os: windows-2019
            generator: Visual Studio 16 2019
            configuration: Debug
            cmake-args: -A x64

          - name: windows-2019-clang
            os: windows-2019
            compiler: clang
            generator: Ninja
            configuration: Debug
            cmake-args: -DCMAKE_C_COMPILER="clang.exe" -DCMAKE_CXX_COMPILER="clang.exe"

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install
        run: |
          pip install cmake==3.18.2.post1 ninja==1.10.0.post1 --upgrade
          cmake --version
          ninja --version
          echo "Generator: ${{ matrix.generator }}"
          echo "CMake args: ${{ matrix.cmake-args }}"

      - name: Install clang
        if: matrix.compiler == 'clang'
        run: |
          curl -fsSLO https://github.com/llvm/llvm-project/releases/download/llvmorg-12.0.1/LLVM-12.0.1-win64.exe
          7z x LLVM-12.0.1-win64.exe -y -o"c:\llvm"
          echo "c:\llvm\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: CMake
        run: |
          cmake -S . -B build -G "${{ matrix.generator }}" ${{ matrix.cmake-args }}

      - name: Build
        run: |
          cmake --build build --config ${{ matrix.configuration }}

      - name: Test
        run: |
          (cd build && ctest -C ${{ matrix.configuration }} )
