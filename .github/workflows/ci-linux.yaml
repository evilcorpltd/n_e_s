name: Linux CI

on:
  push:
    branches:
    - master
  pull_request:

jobs:
  ci:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}

    env:
      CTEST_OUTPUT_ON_FAILURE: ON
      CTEST_PARALLEL_LEVEL: 2

    strategy:
      fail-fast: false
      matrix:
        include:
          - name: ubuntu-18.04-gcc-9
            os: ubuntu-18.04
            compiler: gcc
            version: "9"

          - name: ubuntu-18.04-clang-9
            os: ubuntu-18.04
            compiler: clang
            version: "9"

    steps:
      - uses: actions/checkout@v2

      - name: Install
        run: |
          echo "::add-path::/home/runner/.local/bin"
          python3 -m pip install pip --upgrade
          python3 -m pip install cmake==3.14.4 ninja==1.9.0.post1 --upgrade

          sudo apt update

          if [ "${{ matrix.compiler }}" = "gcc" ]; then
            sudo apt-get install -y g++-${{ matrix.version }} g++-${{ matrix.version }}-multilib
            echo "::set-env name=CC::gcc-${{ matrix.version }}"
            echo "::set-env name=CXX::g++-${{ matrix.version }}"
          else
            sudo apt-get install -y clang-${{ matrix.version }} g++-multilib
            echo "::set-env name=CC::clang-${{ matrix.version }}"
            echo "::set-env name=CXX::clang++-${{ matrix.version }}"
          fi

      - name: CMake
        run: |
          cmake --version
          ninja --version
          echo "CMake args: ${{ matrix.cmake-args }}"

          cmake -S . -B build ${{ matrix.cmake-args }}

      - name: Build
        run: |
          cmake --build build --config ${{ matrix.configuration }}

      - name: Test
        run: |
          (cd build && ctest -C ${{ matrix.configuration }} )
